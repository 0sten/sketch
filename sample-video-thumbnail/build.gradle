apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

Properties localProperties = openProperties("local.properties")
String jksFileName = localProperties.getProperty("sample.storeFile")
File jksFile = jksFileName != null && "" != jksFileName.trim() ? file(jksFileName) : null

android {
    compileSdkVersion COMPILE_SDK_VERSION.toInteger()

    defaultConfig {
        applicationId "me.panpf.sketch.sample.videothumbnail"

        minSdkVersion 14
        targetSdkVersion TARGET_SDK_VERSION.toInteger()
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME

        ndk {
            abiFilters "armeabi", 'x86'
        }
    }

    signingConfigs {
        release {
            storeFile jksFile
            storePassword localProperties.getProperty('sample.storePassword')
            keyAlias localProperties.getProperty('sample.keyAlias')
            keyPassword localProperties.getProperty('sample.keyPassword')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':sketch')

    implementation "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    implementation "com.android.support:recyclerview-v7:${SUPPORT_VERSION}"
    implementation "com.android.support.constraint:constraint-layout:${CONSTRAINT_LAYOUT_VERSION}"

    implementation "me.panpf:assembly-adapter:${ASSEMBLY_ADAPTER_VERSION}"

    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever:${FFMPEG_MEDIA_METADATA_RETRIEVER_VERSION}"
}

Properties openProperties(String fileName) {
    File propertiesFile = new File(projectDir, fileName)
    if (!propertiesFile.exists()) {
        return new Properties()
    }
    FileInputStream inputStream = new FileInputStream(propertiesFile)
    Properties properties = new Properties()
    properties.load(inputStream)
    inputStream.close()
    return properties
}
